[pytest]
# Pytest Configuration for Software & Innovation Testing Architecture

testpaths = software-innovation-tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for categorizing tests
markers =
    vision: Multimodal vision tests (requires Claude vision model)
    integration: End-to-end integration tests across systems
    benchmark: Performance benchmark tests
    ci: CI/CD integration tests for GitHub Actions
    git_hook: Git hook tests for pre-commit validation
    asyncio: Asynchronous tests requiring asyncio
    software_track: Software Making Track tests
    innovation_track: Innovation/Integration Track tests
    cross_track: Cross-track collaboration tests
    regime_exploration: Exploration regime tests (30% distribution)
    regime_optimization: Optimization regime tests (20% distribution)
    regime_stabilization: Stabilization regime tests (50% distribution)

# Test execution options
addopts =
    -v
    --tb=short
    --strict-markers
    --color=yes
    -ra
    --maxfail=5

# Timeout configuration
timeout = 300
timeout_method = thread

# Coverage configuration (optional)
# Uncomment to enable coverage reporting
# addopts = --cov=software-innovation-tests --cov-report=html --cov-report=term

# Asyncio configuration
asyncio_mode = auto

# Minimum Python version
minversion = 3.9

# Console output format
console_output_style = progress

# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warning filters
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning

# Three-Regime Test Distribution Targets
# These are informational - actual enforcement happens in CI
# Exploration: 30% (edge cases, new features)
# Optimization: 20% (performance, refactoring)
# Stabilization: 50% (critical paths, regression)
