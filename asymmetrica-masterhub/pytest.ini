# Asymmetrica Protocol - Pytest Configuration
# Three-Regime Test Distribution System

[pytest]
# Minimum Python version
minversion = 7.0

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*

# Regime markers (Three-Regime Distribution: 30/20/50)
markers =
    exploration: Exploration regime tests (30% distribution, 70% pass threshold)
    optimization: Optimization regime tests (20% distribution, 85% pass threshold)
    stabilization: Stabilization regime tests (50% distribution, 100% pass threshold)

    # Additional quality markers
    performance: Performance benchmark tests
    integration: Integration tests
    unit: Unit tests
    contract: Contract tests

    # Priority markers
    critical: Critical path tests (must pass in CI/CD)
    slow: Slow-running tests (skip in quick checks)

# Test output configuration
addopts =
    --verbose
    --strict-markers
    --tb=short
    --color=yes
    --maxfail=10
    --regime-report

# Coverage settings (if using pytest-cov)
# --cov=.
# --cov-report=html
# --cov-report=term-missing
# --cov-fail-under=80

# Test paths
testpaths =
    sdk-integration
    research-track-tests

# Ignore patterns
norecursedirs =
    .git
    .pytest_cache
    __pycache__
    node_modules
    venv
    env
    .venv
    dist
    build
    *.egg
    memory

# Console output options
console_output_style = progress

# Log configuration
log_cli = false
log_cli_level = INFO
log_file = test_logs/pytest.log
log_file_level = DEBUG

# Timeout for tests (requires pytest-timeout)
# timeout = 300

# Quality Gate Thresholds (used by conftest.py):
# EXPLORATION_TARGET = 0.70  (70% pass rate)
# OPTIMIZATION_TARGET = 0.85 (85% pass rate)
# STABILIZATION_TARGET = 1.00 (100% pass rate)

# Regime Distribution Targets:
# EXPLORATION_RATIO = 0.30  (30% of tests)
# OPTIMIZATION_RATIO = 0.20 (20% of tests)
# STABILIZATION_RATIO = 0.50 (50% of tests)

# Weighted Confidence Formula:
# confidence = sum(regime_pass_rate × regime_weight × regime_proportion)
#   where weights: exploration=0.70, optimization=0.85, stabilization=1.00
